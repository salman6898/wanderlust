pipeline {
    agent any
    environment {
        SONAR_HOME = tool "Sonar"
    }
    stages {
        stage("Clone Code from GitHub") {
            steps {
                git url: "https://github.com/krishnaacharyaa/wanderlust.git", branch: "devops"
            }
        }
        stage("SonarQube Quality Analysis") {
            steps {
                withSonarQubeEnv("Sonar") {
                    sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=wanderlust -Dsonar.projectKey=wanderlust"
                }
            }
        }
        stage("OWASP Dependency Check") {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'dc'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage("Sonar Quality Gate Scan") {
            steps {
                timeout(time: 2, unit: "MINUTES") {
                    waitForQualityGate abortPipeline: false
                }
            }
        }
        stage("Trivy File System Scan") {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html ."
            }
        }
        stage("Deploy using Docker compose") {
            steps {
                sh "docker-compose up -d"
            }
        }
    }
    post {
        always {
            // Collect SonarQube, OWASP Dependency Check, and Trivy reports
            archiveArtifacts artifacts: '**/dependency-check-report.xml, **/trivy-fs-report.html', allowEmptyArchive: true
        }
        success {
            emailext(
                to: 'recipient@example.com',
                subject: "Build ${currentBuild.fullDisplayName} - Succeeded",
                body: """<p>Build ${currentBuild.fullDisplayName} succeeded. Please find the attached SonarQube, OWASP Dependency Check, and Trivy reports.</p>""",
                attachmentsPattern: '**/dependency-check-report.xml, **/trivy-fs-report.html',
                mimeType: 'text/html'
            )
        }
        failure {
            emailext(
                to: 'recipient@example.com',
                subject: "Build ${currentBuild.fullDisplayName} - Failed",
                body: """<p>Build ${currentBuild.fullDisplayName} has failed. Please find the attached SonarQube, OWASP Dependency Check, and Trivy reports.</p>""",
                attachmentsPattern: '**/dependency-check-report.xml, **/trivy-fs-report.html',
                mimeType: 'text/html'
            )
        }
    }
}
